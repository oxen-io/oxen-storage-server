From: Jason Rhinelander <jason@imaginary.ca>
Date: Tue, 8 Aug 2023 14:48:15 -0300
Subject: Fix `get_used_bytes` to subtract free pages

`get_used_bytes` was returning the number of allocated pages, which in
general doesn't go down.

This fixes it to return the bytes of total pages *minus* the bytes in
free pages, and adds a `get_total_bytes` that does the old behaviour.
---
 oxenss/snode/service_node.cpp | 1 +
 oxenss/storage/database.cpp   | 6 +++++-
 oxenss/storage/database.hpp   | 9 ++++++++-
 3 files changed, 14 insertions(+), 2 deletions(-)

diff --git a/oxenss/snode/service_node.cpp b/oxenss/snode/service_node.cpp
index d175646..b6b6ce6 100644
--- a/oxenss/snode/service_node.cpp
+++ b/oxenss/snode/service_node.cpp
@@ -1300,6 +1300,7 @@ std::string ServiceNode::get_stats() const {
         ns_stats[fmt::format("{}", ns)] = count;
 
     val["db_used"] = db_->get_used_bytes();
+    val["db_total"] = db_->get_total_bytes();
     val["db_max"] = Database::SIZE_LIMIT;
 
     return val.dump();
diff --git a/oxenss/storage/database.cpp b/oxenss/storage/database.cpp
index 49ac4d4..f1f4372 100644
--- a/oxenss/storage/database.cpp
+++ b/oxenss/storage/database.cpp
@@ -555,10 +555,14 @@ std::vector<std::pair<namespace_id, int64_t>> Database::get_namespace_counts() {
     return get_all<namespace_id, int64_t>(st);
 }
 
-int64_t Database::get_used_bytes() {
+int64_t Database::get_total_bytes() {
     return impl->prepared_get<int64_t>("PRAGMA page_count") * impl->page_size;
 }
 
+int64_t Database::get_used_bytes() {
+    return get_total_bytes() - impl->prepared_get<int64_t>("PRAGMA freelist_count") * impl->page_size;
+}
+
 static std::optional<message> get_message(DatabaseImpl& impl, SQLite::Statement& st) {
     std::optional<message> msg;
     while (st.executeStep()) {
diff --git a/oxenss/storage/database.hpp b/oxenss/storage/database.hpp
index 8e4bca4..a98d3eb 100644
--- a/oxenss/storage/database.hpp
+++ b/oxenss/storage/database.hpp
@@ -88,7 +88,14 @@ class Database {
     // Returns the number of messages grouped by namespace id
     std::vector<std::pair<namespace_id, int64_t>> get_namespace_counts();
 
-    // Returns the number of used bytes (i.e. used pages * page size) of the database
+    // Returns the number of allocated bytes used on disk (i.e. used pages * page size).  This
+    // includes both used and unused storage (i.e. allocated on disk, currently currently unused
+    // that will likely be reused by sqlite when needed).
+    int64_t get_total_bytes();
+
+    // Returns the number of used bytes on disk; that is, total pages (as returned by
+    // `get_total_bytes`) minus unused pages in the database file.  Note that this is still an upper
+    // bound on actual stored size as there may be partially filled pages.
     int64_t get_used_bytes();
 
     // Get random message. Returns nullopt if there are no messages.
